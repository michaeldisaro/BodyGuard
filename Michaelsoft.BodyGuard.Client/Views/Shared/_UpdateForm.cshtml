@using System.Reflection
@using Michaelsoft.BodyGuard.Client.Interfaces
@using Michaelsoft.BodyGuard.Client.Models.Forms
@using Michaelsoft.BodyGuard.Common.Extensions
@using Michaelsoft.BodyGuard.Common.Models
@using Michaelsoft.BodyGuard.Common.Settings
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.Extensions.Options
@model Michaelsoft.BodyGuard.Client.Models.Forms.UpdateForm
@inject IHttpContextAccessor HttpContextAccessor
@inject IBodyGuardUserApiService BodyGuardUserApiService
@inject IOptions<CommonSettings> CommonSettings
@inject IViewLocalizer Localizer

@{
    var userId = HttpContextAccessor.HttpContext.Request.Query["id"].ToString();
    User user;
    try
    {
        user = BodyGuardUserApiService.GetUser(userId).Result;
    }
    catch (Exception)
    {
        <p class="text-danger">Unauthorized.</p>
        return;
    }
    Model.User = user;
    var identitySettings = CommonSettings.Value.IdentitySettings;
    var formStatus = TempData.Get<FormStatus>("FormStatus");
    var userDataProperties = Model.User.GetType().GetUpdatableProperties();
    var enabledUserDataProperties = identitySettings.EnabledUserDataProperties ?? new List<string>();
    userDataProperties = enabledUserDataProperties.Any() ?
                             userDataProperties.Where(udp => enabledUserDataProperties.Contains(udp.Name)).ToArray() :
                             new PropertyInfo[0];
}

<form method="post" asp-area="User" asp-page="/Update">
    <div class="update-form">
        <input type="hidden" asp-for="SuccessArea">
        <input type="hidden" asp-for="SuccessPage">
        <input type="hidden" asp-for="FailureArea">
        <input type="hidden" asp-for="FailurePage">
        <input type="hidden" asp-for="SubmitLabel">
        <input type="hidden" asp-for="User.Id">
        @foreach (var propertyInfo in userDataProperties)
        {
            <div class="form-group">
                <div class="bodyguard_form-label">
                    @Html.DisplayName(Localizer.GetString(propertyInfo.GetDisplayName()))
                </div>
                <div class="bodyguard_form-input">
                    @Html.TextBox($"User.{propertyInfo.Name}", formStatus.GetAttemptedValue($"User.{propertyInfo.Name}") ?? propertyInfo.GetValue(Model.User, null), new {@class = "form-control"})
                </div>
                <div class="bodyguard_form-error">
                    @Html.ValidationMessage(propertyInfo.Name, formStatus.GetError($"User.{propertyInfo.Name}"), new {@class = "text-danger"})
                </div>
            </div>
        }
        <div class="form-group">
            <button type="submit" class="btn btn-primary btn-sm btn-block">@Model.SubmitLabel</button>
        </div>
    </div>
</form>